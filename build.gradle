apply from: "http://dl.bintray.com/content/shemnon/javafx-gradle/0.3.0/javafx.plugin"
apply plugin: 'java'

// Match existing source structure
sourceSets {
    main {
        resources {
            srcDir 'resources'
        }
        java {
            srcDir 'src'
        }
    }
}
// Configures plugin
javafx {
    // Points to JDK and its JavaFX libraries, also declares target runtime JDK
    javaRuntime = getProjectProperty('org.gradle.java.home')

    // Application name and ID presented by target OS
    appID 'DexMethodCounts'
    appName 'Java dex method counts UI'
    // Main class of application
    mainClass 'info.persistent.dex.MainUI'

    // JVM arguments, system properties, application command line arguments
    jvmArgs = ['-XX:+AggressiveOpts', '-XX:CompileThreshold=1']
    systemProperties = ['prism.disableRegionCaching':'true']
    arguments = ['-l', '--fast']

    // Keystore credentials for signing JAR
    // Generate key: keytool -genkey -alias release -keyalg RSA -keystore keystore.jks -keysize 2048
    //releaseKey {
    //    alias = 'release'
    //    keyPass = getProjectProperty('keyStorePassword')
    //    keyStore = file("${System.properties['user.home']}/keystore/keystore.jks")
    //    storePass = getProjectProperty('storePassword')
    //}

    //signingMode 'release'

    // ...
}

String getProjectProperty(String propertyName) {
    project.hasProperty(propertyName) ? project.property(propertyName) : null
}

jar {
    // Redirect output to match launcher script
    destinationDir = file('build/jar')
    manifest {
        attributes("Main-Class": "info.persistent.dex.Main")
    }
}